---
sudo: false
language: python

env:
- GCE_CREDENTIALS_FILE=/home/travis/build/jonashackt/molecule-ansible-aws-gcp-azure/testproject-233213-45d56e1b7fc5.json GCE_SERVICE_ACCOUNT_EMAIL=molecule@testproject-233213.iam.gserviceaccount.com GCE_PROJECT_ID=testproject-233213

services:
- docker

#cache:
#  directories:
#    - "$HOME/google-cloud-sdk/"

install:
- pip install molecule
- pip install docker-py
- pip install gcloud apache-libcloud pycrypto

# install Google Cloud related packages
#- gcloud version || true
#- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
# Add gcloud to $PATH
#- source /home/travis/google-cloud-sdk/path.bash.inc
- gcloud version
# Decrypt Google Cloud Platform service account json key file
- openssl aes-256-cbc -K $encrypted_c0be5bd8086d_key -iv $encrypted_c0be5bd8086d_iv -in testproject-233213-45d56e1b7fc5.json.enc -out testproject-233213-45d56e1b7fc5.json -d
# Authenticate against GCP with decrypted key file
- gcloud auth activate-service-account --key-file testproject-233213-45d56e1b7fc5.json
  # Set GCP project id
- gcloud config set project $GCP_GCE_PROJECT_ID

script:
- cd docker
# Molecule Testing Travis-locally with Docker
#- molecule test
# Molecule Testing on AWS EC2
#- molecule create --scenario-name aws-ec2-ubuntu
#- molecule converge --scenario-name aws-ec2-ubuntu
#- molecule verify --scenario-name aws-ec2-ubuntu
#- molecule destroy --scenario-name aws-ec2-ubuntu
# Run Molecule test on GCP
- molecule --debug create --scenario-name gcp-gce-ubuntu
- molecule --debug converge --scenario-name gcp-gce-ubuntu
- molecule --debug verify --scenario-name gcp-gce-ubuntu
- molecule --debug destroy --scenario-name gcp-gce-ubuntu